---
import { Icon } from 'astro-icon/components';

const dayOfMonthFormatter = new Intl.DateTimeFormat('de-DE', {
	day: 'numeric',
	timeZone: 'Europe/Berlin',
});
const monthFormatter = new Intl.DateTimeFormat('de-DE', {
	month: 'short',
	timeZone: 'Europe/Berlin',
});
const timeFormatter = new Intl.DateTimeFormat('de-DE', {
	timeStyle: 'short',
	timeZone: 'Europe/Berlin',
});

export interface Termin {
	date: Date;
	name: string;
	description: string;
	location: string;
}

interface Props {
	termin: Termin;
}

const { termin } = Astro.props;
---

<div class="termin-item-root">
	<div class="left">
		<h3 class="day-of-month">{dayOfMonthFormatter.format(termin.date)}</h3>
		<div class="month">{monthFormatter.format(termin.date)}.</div>
	</div>
	<div class="right">
		<div class="time-and-location">
			<div class="time">
				<Icon name="ic:baseline-access-time-filled" width={24} height={24} />
				<div>{timeFormatter.format(termin.date)}</div>
			</div>
			<div class="location">
				<Icon name="ic:baseline-location-on" width={24} height={24} />
				<div>{termin.location}</div>
			</div>
		</div>
		<h3 class="name" set:html={termin.name} />
		<div class="description" set:html={termin.description} />
	</div>
</div>

<style>
	.termin-item-root {
		display: flex;
		max-width: 100%;
		flex-grow: 1;
	}

	.left {
		background-color: var(--theme-primary);
		color: var(--theme-on-primary);
		padding: 1rem;
		border-top-left-radius: calc(var(--theme-shape-radius) / 2);
		border-bottom-left-radius: calc(var(--theme-shape-radius) / 2);
		min-width: 4rem;
	}

	@media (max-width: 768px) {
		.left {
			min-width: 3rem;
			padding: 0.5rem;
		}
	}

	.day-of-month,
	.month {
		display: flex;
		justify-content: center;
	}

	.day-of-month {
		margin: 0;
	}

	.right {
		background-color: var(--theme-surface-1);
		color: var(--theme-on-surface-1);
		padding: 1rem;
		border-top-right-radius: calc(var(--theme-shape-radius) / 2);
		border-bottom-right-radius: calc(var(--theme-shape-radius) / 2);
		flex-grow: 1;
	}

	.time-and-location {
		display: flex;
		gap: 0.5rem;
	}

	.time,
	.location {
		display: flex;
		align-items: center;
		gap: 0.125rem;
	}

	.location > *:first-child,
	.time > *:first-child {
		flex-shrink: 0;
	}

	.description {
		max-width: 30rem;
	}

	h3 {
		word-break: break-all;
	}
	.name,
	.description {
		word-break: break-word;
	}
</style>
