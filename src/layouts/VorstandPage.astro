---
import Layout from './Page.astro';
import type { Post } from '../components/blog/BlogPostsList.astro';
import { Container } from '../components/odyssey-theme';
import { BASE_PATH_WITHOUT_DOMAIN } from '../../base-path.mjs';
import type { VorstandsMitglied } from './types';

interface Props {
	einzelBilder: VorstandsMitglied[];
	gruppenBild: string;
	jahr: number;
}
const { einzelBilder, gruppenBild, jahr } = Astro.props;

const allVorstandPages = Object.keys(
	await import.meta.glob('../pages/vorstand/*'),
)
	.map(path => path.replaceAll('../pages/', '').replaceAll('.astro', ''))
	.filter(path => !path.includes('index'))
	.filter(path => !path.includes(`${jahr}`));
---

<Layout>
	<Container>
		<section class="text-and-image__section">
			<div class="text-and-image__image">
				<picture slot="image-container">
					<img src={gruppenBild} alt={`Der Vorstand ${jahr}`} />
				</picture>
			</div>
			<div class="text-and-image__text">
				<div class="text-container">
					<h1>{`Der Vorstand ${jahr}`}</h1>
				</div>
			</div>
		</section>
	</Container>

	<Container>
		<ul class="blog-posts-list__list_vorstand">
			{
				(
					einzelBilder.map(einzelBild => {
						return {
							featuredImage: einzelBild.srcS,
							title: String(einzelBild.position),
							excerpt: `${einzelBild.firstname} ${einzelBild.lastname}`,
						};
					}) as Post[]
				).map(post => {
					return (
						<li class="blog-post__preview">
							<a>
								<img src={post.featuredImage} loading="lazy" />
								<h3 set:html={post.title} />
								{post.excerpt && <p>{post.excerpt}</p>}
							</a>
						</li>
					);
				})
			}
		</ul>
	</Container>
	<Container>
		<section class="cta-card__section">
			<div class="cta-card__container">
				<h3>Vorst√§nde aus anderen Jahren</h3>
				{
					allVorstandPages.map(page => (
						<a href={`${BASE_PATH_WITHOUT_DOMAIN}/${page}`}>
							Vorstand aus dem Jahr {page.replaceAll('vorstand/', '')}
						</a>
					))
				}
			</div>
		</section>
	</Container>
</Layout>

<style>
	.cta-card__section {
		--section-bg: var(--theme-surface-2);
		--section-color: var(--theme-on-surface-1);
		margin-bottom: 2rem;
		padding: 2rem;
		background-color: var(--section-bg);
		color: var(--section-color);
		border-radius: var(--theme-shape-radius);
	}
	.cta-card__container {
		max-width: var(--container-max-width-narrow);
		display: flex;
		flex-direction: column;
	}
	.cta-card__container > img {
		width: 100%;
	}
	.blog-posts-list__list_vorstand {
		margin: 0;
		padding: 0;
		list-style: none;
		display: grid;
		grid-template-columns: repeat(4, 1fr);
		gap: 1rem;
	}

	@media (max-width: 1200px) {
		.blog-posts-list__list_vorstand {
			grid-template-columns: repeat(3, 1fr);
		}
	}

	@media (max-width: 768px) {
		.blog-posts-list__list_vorstand {
			grid-template-columns: repeat(2, 1fr);
		}
		.blog-post__preview h3 {
			font-size: x-large;
		}
	}

	.blog-post__preview img {
		margin-bottom: 1rem;
		border-radius: calc(var(--theme-shape-radius) / 2);
		transition: border-radius var(--theme-transition);
	}
	.blog-post__preview:hover img {
		border-radius: var(--theme-shape-radius);
	}
	.blog-post__preview a {
		display: block;
		text-decoration: none;
		color: inherit;
	}
	.blog-post__preview h3 {
		margin: 0;
		word-break: break-word;
	}
	ul img {
		aspect-ratio: 4 / 5;
		width: 100%;
		object-fit: cover;
		max-height: 500px;
	}

	.text-and-image__section {
		display: grid;
		align-items: center;
		gap: 1rem;
		margin: 0;
		grid-template-columns: 1fr;
	}

	.text-and-image__text {
		padding-top: 2rem;
		justify-self: center;
	}

	.text-and-image__image img {
		max-height: 575px;
		object-fit: cover;
		border-radius: calc(var(--theme-shape-radius) / 2);
		transition: border-radius var(--theme-transition);
		width: 100%;
	}

	.text-and-image__image img:hover {
		border-radius: var(--theme-shape-radius);
	}

	.cta-card__section {
		--section-bg: var(--theme-surface-1);
		--section-color: var(--theme-on-surface-1);
		margin-bottom: 2rem;
		padding: 2rem;
		background-color: var(--section-bg);
		color: var(--section-color);
		border-radius: var(--theme-shape-radius);
	}
	.cta-card__container {
		max-width: var(--container-max-width-narrow);
		display: flex;
		flex-direction: column;
	}
</style>
